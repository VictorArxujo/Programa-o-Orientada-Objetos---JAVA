// Victor Dos Santos Araujo, 2475553

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ghxstyzim
 */
public class FormTabFunc extends javax.swing.JFrame {
  
    private static FormTabFunc tabFuncionariosUnic;
    private BDFuncionario comandoHome = BDFuncionario.getInstanciaComandoHome();
    private static FormTabFunc geraTabFuncionarios;
    
    // Método Singleton
    public static FormTabFunc geraTabFuncionarios(){
        if(tabFuncionariosUnic == null){
            tabFuncionariosUnic = new FormTabFunc();
        }
        return tabFuncionariosUnic;
    }
    
    // Construtor
    public FormTabFunc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableFunc = new javax.swing.JTable();
        BtAtualizar = new javax.swing.JButton();
        BtExcluir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textCPF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textAlterar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        BtAlterar = new javax.swing.JButton();
        textProcurar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        BtProcurar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableFunc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Idade", "Salário", "Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableFunc);

        BtAtualizar.setText("Atualizar");
        BtAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAtualizarActionPerformed(evt);
            }
        });

        BtExcluir.setText("Excluir");
        BtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtExcluirActionPerformed(evt);
            }
        });

        jLabel2.setText("Qual CPF quer tirar do Sistema?");

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Atualize para ver os Funcionários:");

        jLabel3.setText("Qual CPF quer alterar no Sistema");

        BtAlterar.setText("Alterar");
        BtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAlterarActionPerformed(evt);
            }
        });

        textProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textProcurarActionPerformed(evt);
            }
        });

        jLabel4.setText("Qual CPF quer procurar no Sistema?");

        BtProcurar.setText("Procurar");
        BtProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtProcurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BtAtualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(textAlterar, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BtAlterar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BtExcluir))
                                    .addComponent(jLabel2))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(textProcurar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(BtProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtAtualizar)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtAlterar)
                    .addComponent(textProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtProcurar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtExcluir)
                    .addComponent(textCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAtualizarActionPerformed
        popularTbFuncionarios();
    }//GEN-LAST:event_BtAtualizarActionPerformed

    private void BtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtExcluirActionPerformed
        try {
            excFuncionario();
            popularTbFuncionarios();
        } catch (CpfInvalidoException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Erro de CPF", JOptionPane.ERROR_MESSAGE);
        }
        limpar();
    }//GEN-LAST:event_BtExcluirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        voltarHome();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAlterarActionPerformed
        try {
            altFuncCpf(); // TODO add your handling code here:
        } catch (CpfInvalidoException ex) {
            Logger.getLogger(FormTabFunc.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpar();
    }//GEN-LAST:event_BtAlterarActionPerformed

    private void textProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textProcurarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textProcurarActionPerformed

    private void BtProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtProcurarActionPerformed
        
        try {
            procFuncCpf();// TODO add your handling code here:
        } catch (CpfInvalidoException ex) {
            Logger.getLogger(FormTabFunc.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpar();
    }//GEN-LAST:event_BtProcurarActionPerformed
    

    public void limpar(){
        textCPF.setText("");
        textAlterar.setText("");
        textProcurar.setText("");
    }
    
 public void popularTbFuncionarios(){
        DefaultTableModel modelo = (DefaultTableModel) tableFunc.getModel();
        modelo.setRowCount(0); 
        
        for (Funcionario funcionario : comandoHome.getBdFuncionarios()) {
            modelo.addRow(new Object[]{
                funcionario.getNome(), 
                funcionario.getCpf(),
                String.valueOf(funcionario.getIdade()),
                funcionario.getSalario(), 
                funcionario.getTipo(),
             
            });
        }
    }

   public void excFuncionario() throws CpfInvalidoException {
    String cpfStr = textCPF.getText().trim();
    if(cpfStr.isEmpty()){
        JOptionPane.showMessageDialog(null, "Por favor, informe um CPF válido!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
    try {
        int cpf = Integer.parseInt(cpfStr);
       
        Funcionario funcionarioTemp = new Funcionario();
        funcionarioTemp.setCpf(cpf);
        
        boolean removido = comandoHome.exFuncionarioCPF(funcionarioTemp);
        if (removido) {
            JOptionPane.showMessageDialog(null, "Funcionário removido com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Funcionário com CPF " + cpf + " não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    } catch(NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "CPF inválido! Certifique-se de que o CPF seja um número.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

    
    public void voltarHome(){
        int ret = JOptionPane.showConfirmDialog(
                null,
                "Deseja realmente voltar ao menu principal?",
                "Saída",
                JOptionPane.YES_NO_CANCEL_OPTION
        );
        if(ret == 0){
            dispose();
        }
    }
   
    
    public void altFuncCpf() throws CpfInvalidoException {
    
    String cpfStr = textAlterar.getText().trim(); 

    try {
        int cpf = Integer.parseInt(cpfStr); // Converte para inteiro

        BDFuncionario comandoHome = BDFuncionario.getInstanciaComandoHome();
        Funcionario funcionario = new Funcionario(cpf);

        Funcionario funcionarioAtualizado = comandoHome.atualizarFuncionarioCpf(funcionario);

        if (funcionarioAtualizado != null) {
            JOptionPane.showMessageDialog(
                    null,
                    "Nome atualizado com sucesso: " + funcionarioAtualizado.getNome(),
                    "Sucesso",
                    JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "Funcionário não encontrado!",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(
                null,
                "CPF inválido! Digite apenas números.",
                "Erro",
                JOptionPane.ERROR_MESSAGE
        );
    }
}

    
    
    public void procFuncCpf() throws CpfInvalidoException {
        
        String cpfStr = textProcurar.getText().trim();

           
            if (cpfStr.isEmpty()) {
                JOptionPane.showMessageDialog(
                    null,
                    "Por favor, informe um CPF!",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE
                );
                textProcurar.requestFocus();
                return;
            }

            int cpf;
            try {
                // Converte o CPF para número
                cpf = Integer.parseInt(cpfStr);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(
                    null,
                    "CPF inválido! Certifique-se de que o CPF seja composto somente por números.",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE
                );
                textProcurar.setText("");
                textProcurar.requestFocus();
                return;
            }

         
            Funcionario funcTemp = new Funcionario();
            try {
                funcTemp.setCpf(cpf);
            } catch (CpfInvalidoException ex) {
                JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Erro de CPF",
                    JOptionPane.ERROR_MESSAGE
                );
                textProcurar.setText("");
                textProcurar.requestFocus();
                return;
        }

      
        Funcionario funcionarioEncontrado = comandoHome.consultaFuncionario(funcTemp);

        if (funcionarioEncontrado != null) {
            // Se o funcionário foi encontrado, exibe seus dados
            JOptionPane.showMessageDialog(
                null,
                "Funcionário encontrado:\n" +
                "Nome: " + funcionarioEncontrado.getNome() + "\n" +
                "CPF: " + funcionarioEncontrado.getCpf() + "\n" +
                "Idade: " + funcionarioEncontrado.getIdade() + "\n" +
                "Salário: " + funcionarioEncontrado.getSalario() + "\n" +
                "Cargo: " + funcionarioEncontrado.getTipo(),
                "Dados do Funcionário",
                JOptionPane.INFORMATION_MESSAGE
            );
            limpar(); // Limpa os campos, se necessário
        } else {
            // Se não for encontrado, exibe mensagem de erro e solicita que o usuário informe novamente
            JOptionPane.showMessageDialog(
                null,
                "Não existe um funcionário com este CPF!",
                "Erro de Consulta",
                JOptionPane.ERROR_MESSAGE
            );
            textCPF.setText("");
            textCPF.requestFocus();
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtAlterar;
    private javax.swing.JButton BtAtualizar;
    private javax.swing.JButton BtExcluir;
    private javax.swing.JButton BtProcurar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableFunc;
    private javax.swing.JTextField textAlterar;
    private javax.swing.JTextField textCPF;
    private javax.swing.JTextField textProcurar;
    // End of variables declaration//GEN-END:variables
}
